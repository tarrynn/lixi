name: Elixir CI

on: push

jobs:
  test_controllers:
    runs-on: ubuntu-latest
    container:
      image: tarrynn/elixir_docker:latest
    steps:
    - uses: actions/checkout@v1
    - name: Start Postgresql
      run: |
        echo "127.0.0.1 docker" >> /etc/hosts
        service postgresql start
        pg_isready --host=docker --port=5432 --username=postgres
        sudo -u postgres psql postgres -c "ALTER USER postgres WITH PASSWORD 'postgres';";
        mv -f config/test_CI.exs config/test.exs
    - name: Install Dependencies
      run: |
        mix local.rebar --force
        mix local.hex --force
        mix deps.get
        cd ./assets && npm install
        cd ..
        npm run deploy --prefix ./assets
    - name: Setup database
      run: |
        MIX_ENV=test mix ecto.setup
    - name: Run Tests for controllers
      run: |
        mix test test/lixi_web/controllers/
  test_views:
    runs-on: ubuntu-latest
    container:
      image: tarrynn/elixir_docker:latest
    steps:
    - uses: actions/checkout@v1
    - name: Start Postgresql
      run: |
        echo "127.0.0.1 docker" >> /etc/hosts
        service postgresql start
        pg_isready --host=docker --port=5432 --username=postgres
        sudo -u postgres psql postgres -c "ALTER USER postgres WITH PASSWORD 'postgres';";
        mv -f config/test_CI.exs config/test.exs
    - name: Install Dependencies
      run: |
        mix local.rebar --force
        mix local.hex --force
        mix deps.get
        cd ./assets && npm install
        cd ..
        npm run deploy --prefix ./assets
    - name: Setup database
      run: |
        MIX_ENV=test mix ecto.setup
    - name: Run Tests for views
      run: |
        mix test test/lixi_web/views/
  deploy:
    needs: [test_views, test_controllers]
    runs-on: ubuntu-latest
    container:
      image: tarrynn/elixir_docker:latest
    steps:
    - name: Deploy
      run: |
        echo "Deploying ${{ github.ref }}"
        mix release.version
